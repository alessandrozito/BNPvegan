#### gibbs sampler for the resampled sequence
library(BayesLogit)
library(TruncatedNormal)

compute_logLik <- function(d, X, beta) {
  # Compute the log-likelihood for a sample from the posterior
  d <- d[-1] # Remove the first discovery
  eta <- c(X %*% beta) # odds
  loglik <- sum(d * eta - log(1 + exp(eta)))
  return(loglik)
}

Metropolis_d <- function(d_pro, d, X, beta){
  loglik_pro <- compute_logLik(d_pro, X, beta)
  loglik_old <- compute_logLik(d,X, beta)
  acc <- 0
  if(log(runif(1)) < loglik_pro - loglik_old){
    d <- d_pro
    acc <- 1
  }
  return(list("d" = d, "acc" = acc))
}

sample_beta <- function(d, X, beta, sds = NULL) {
  d <- d[-1] # Removal of the first observation
  ub <- c(Inf, 0, 0) # Lower bound for the truncated normal
  p <- ncol(X)
  n = length(d)
  # Choosing a default precision matrix
  if (is.null(sds)) {
    sds <- rep(10, p)
  }
  P <- diag(1 / sds^2)
  eta <- c(X %*% beta)
  omega <- rpg.devroye(num = n, h = 1, z = eta)

  Sigma <- solve(crossprod(X * sqrt(omega)) + P)
  Xd <- crossprod(X, d - 0.5)
  mu <- Sigma %*% Xd # Prior mean here is implicitly assumed equal to zero
  beta <- rtmvnorm(1, mu = mu, sigma = Sigma, ub = ub)

  return(beta)
}

Gibbs_sequences <- function(frequencies, R){

  n <- sum(frequencies)-1
  X <- cbind(1, log(1:n), (1:n))

  beta_out <- matrix(0, R, 3)
  acc_out <- rep(NA, R)
  # initialize beta and d
  d <- extract_discoveries(sample_sequence(frequencies))
  Xd <- crossprod(X, d[-1] - 0.5)
  beta <- solve(crossprod(X / 4, X), Xd)

  for(r in 1:R){
    # Sample beta
    beta <- sample_beta(d, X, beta)
    # Sample d
    d_pro <- extract_discoveries(sample_sequence(frequencies))
    dmet <- Metropolis_d(d_pro, d, X, beta)
    d<-dmet$d
    acc <- dmet$acc

    # Store values
    beta_out[r, ] <- beta
    acc_out[r] <- acc

    if (r %% 100 == 0) {
      cat(paste("Sampling iteration: ", r, ".\n", sep = ""))
    }
  }
  # return
  return(list("beta" = beta_out, "acc" = acc_out))
}


LL3out <- LL3(20000, alpha = 50, sigma = 0.5, phi = 0.99975)

R = 2000
out_gibbs <- Gibbs_sequences(frequencies = LL3out$frequencies, R = R)



